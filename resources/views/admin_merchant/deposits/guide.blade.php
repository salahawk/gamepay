@extends('admin_merchant.layouts.app')
@section('header_styles')

@endsection
@section('contents')
<main>
  <div class="container-fluid px-4">
    <h6 class="mt-4 pb-4 fw-bold">API Integration </h6>
    <div class="admincard">
      <div class="card mb-4 p-4 boxshadow text-muted">
        <p>Technical Integration flow to integrate the Merchant with Gamepay, to move the consumer from Step 1 to Step 2, a POST request needs to be generated by merchant to the following URL.</p>
        <ul>
          <li class="text-info pb-2">POST URL: https://gamepay.online/securepay/process</li>
          <li class="text-info">Test UPI ID - 9213116078@yesb</li>
        </ul>
        <h6 class="fw-bold">Key notes and terms:</h6>
        <ol>
          <li class="pb-2"><strong>Key</strong> : This ID is generated by Gamepay and helps to uniquely identify merchant</li>
          <li class="pb-2"><strong>TxnID(order ID)</strong>: A Unique alphanumeric Transaction ID generated by merchant to uniquely identify a transaction. The TxnID should be unique since it would allow you to identify the transaction easily.</li>
          <li class="pb-2"><strong>Amount</strong>: Amount is the total amount of the transaction (greater than 0) in INR, without a currency symbol or other non-numeric character. Only a decimal allowed.</li>
          <li class="pb-2"><strong>PayID(Salt)</strong>: Unique ID generated for a transaction by Gamepay.<br /><br />
            <table class="table table-bordered">
              <thead>
                <tr>
                  <th scope="col">S.No</th>
                  <th scope="col">Variable</th>
                  <th scope="col">Importance</th>
                  <th scope="col">Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th scope="row">1</th>
                  <td>Key</td>
                  <td>Compulsory</td>
                  <td>Merchant Key provided by Gamepay</td>
                </tr>
                <tr>
                  <th scope="row">2</th>
                  <td>Txnid (order ID)</td>
                  <td>Compulsory</td>
                  <td>Unique id generated by merchant </td>
                </tr>
                <tr>
                  <th scope="row">3</th>
                  <td>Amount</td>
                  <td>Compulsory</td>
                  <td>Payment amount (Type cast the amount to float) only numeric</td>
                </tr>
                <tr>
                  <th scope="row">4</th>
                  <td>Customer name</td>
                  <td>Compulsory</td>
                  <td>(only alphabets a-z are allowed)</td>
                </tr>
                <tr>
                  <th scope="row">5</th>
                  <td>Email</td>
                  <td>Compulsory</td>
                  <td>Customer’s email Id (Format validation required)</td>
                </tr>
                <tr>
                  <th scope="row">6</th>
                  <td>Phone</td>
                  <td>Compulsory</td>
                  <td>Customer’s phone number (Only numeric. Length 10)</td>
                </tr>
                <tr>
                  <th scope="row">7</th>
                  <td>Crypto</td>
                  <td>Compulsory</td>
                  <td>Ex: GAMERE, USDT, BTC…. (Only valid crypto’s are allowed to pass)</td>
                </tr>
                <tr>
                  <th scope="row">8</th>
                  <td>Network</td>
                  <td>Compulsory</td>
                  <td>Ex: BSC, ETH, AWAX….. (Only valid crypto’s are allowed to pass)</td>
                </tr>
                <tr>
                  <th scope="row">9</th>
                  <td>Address</td>
                  <td>Compulsory</td>
                  <td>Destination Address (validation required)</td>
                </tr>
                <tr>
                  <th scope="row">10</th>
                  <td>Remarks</td>
                  <td>Compulsory</td>
                  <td>Remarks (Only String allowed)</td>
                </tr>
                <tr>
                  <th scope="row">11</th>
                  <td>KYC status</td>
                  <td>Compulsory</td>
                  <td>verified ( Only string allowed with length of 8)</td>
                </tr>
                <tr>
                  <th scope="row">12</th>
                  <td>Email status</td>
                  <td>Compulsory</td>
                  <td>verified ( Only string allowed with length of 8) </td>
                </tr>
                <tr>
                  <th scope="row">13</th>
                  <td>Mobile status</td>
                  <td>Compulsory</td>
                  <td>verified ( Only string allowed with length of 8) </td>
                </tr>
                <tr>
                  <th scope="row">14</th>
                  <td>Surl</td>
                  <td>Compulsory</td>
                  <td>Merchant’s Success url (Where Gamepay sends the success response)</td>
                </tr>
                <tr>
                  <th scope="row">15</th>
                  <td>Eurl</td>
                  <td>Compulsory</td>
                  <td>Merchant’s Error url</td>
                </tr>
                <tr>
                  <th scope="row">16</th>
                  <td>Curl</td>
                  <td>Compulsory</td>
                  <td>Callback URL where Gamepay will redirect after successful payment. Also confirms whether merchant added money to user account or not</td>
                </tr>
                <tr>
                  <th scope="row">17</th>
                  <td>hash(Checksum)</td>
                  <td>Compulsory</td>
                  <td>Hash or Checksum =sha512(key|txnid|amount|customername|email|phone| crypto|network|address|remarks|kycstatus|emailstatus|mobilestatus |surl|eurl|curl|salt) (SALT &KEY which provided by gamepay)</td>
                </tr>

              </tbody>
            </table>
          </li>
          <li class="pb-2"><strong>Hash (Checksum):</strong> This refers to a random numeric string generated using a mathematical algorithm to ensure that data is not tampered along the way. Let’s say a message has to be sent from location X to Y. X and Y both mutually agree on a Secret Key called “Salt” that only both of them possess. A checksum is generated by a mathematical function using the message and the Salt as input. This checksum is then sent along with the message to Y. Y then recalculates this checksum using the Salt and the same algorithm. If the checksum that Y calculates is different from the checksum that X passed then the data was tampered along the way and is thus rejected.</li>
        </ol>
        <p>The Checksum algorithm used is SHA2 which is globally well known algorithm. To need help with implementation, feel free to call us, mail us or use Google to find the desired function library for your implementation. Some example codes are also mentioned at the end of this document.</p>
        <h6 class="mt-4 pb-4 fw-bold">Important Things to remember:</h6>
        <p class="fw-bold">Allowed characters </p>
        <ol>
          <li class="pb-2">Characters: A to Z, a to z, 0 to 9</li>
          <li class="pb-2">- (Minus) </li>
          <li class="pb-2">_ (Underscore)</li>
          <li class="pb-2">@ (At the Rate) </li>
          <li class="pb-2">/ (Slash) </li>
          <li class="pb-2"> (Space) </li>
          <li class="pb-2">. (Dot) If the merchant sends any other special characters, then they must be automatically removed.</li>

        </ol>
        <h6 class="mt-4 pb-4 fw-bold">Formula for checksum before transaction sha512</h6>
        <p>$hashSequence = "key|txnid|amount|customername|email|mobile|crypto|network|address|remarks|emailstatus|mobilestatus|kycstatus|surl|eurl|curl|salt" – SALT & KEY provided by Gamepay.</p>
        <p>The algorithm used is SHA2 which is globally well-known algorithm. </p>
        <h6 class="mt-4 pb-4 fw-bold">Return Params</h6>
        <table class="table table-bordered">
          <thead>
            <tr>
              <th scope="col">S.No</th>
              <th scope="col">Variable</th>
              <th scope="col">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">1</th>
              <td>Mode </td>
              <td>UPI Mode</td>
            </tr>
            <tr>
              <th scope="row">2</th>
              <td>status</td>
              <td>Success / failure/rejected. String value. Limit 20 characters.</td>
            </tr>
            <tr>
              <th scope="row">3</th>
              <td>key</td>
              <td>Merchant key provided by Gamepay. Alphanumeric string value. Limit 5-9 characters.</td>
            </tr>
            <tr>
              <th scope="row">4</th>
              <td>txnid</td>
              <td>Merchant Transaction ID. </td>
            </tr>
            <tr>
              <th scope="row">5</th>
              <td>amount</td>
              <td>Original amount send by merchant.</td>
            </tr>
            <tr>
              <th scope="row">6</th>
              <td>Customer name</td>
              <td>String value. Limit 20 characters.</td>
            </tr>
            <tr>
              <th scope="row">7</th>
              <td>email</td>
              <td>Customer email</td>
            </tr>
            <tr>
              <th scope="row">8</th>
              <td>Mobile</td>
              <td>Customer Mobile</td>
            </tr>
            <tr>
              <th scope="row">9</th>
              <td>crypto</td>
              <td>Crypto provided by merchant</td>
            </tr>
            <tr>
              <th scope="row">10</th>
              <td>Network</td>
              <td>Network provided by merchant </td>
            </tr>
            <tr>
              <th scope="row">11</th>
              <td>Address</td>
              <td>Destination address</td>
            </tr>
            <tr>
              <th scope="row">12</th>
              <td>remark</td>
              <td>String value. Limit 30 characters.</td>
            </tr>
            <tr>
              <th scope="row">13</th>
              <td>Kyc status</td>
              <td>String value. Limit 11 characters.</td>
            </tr>
            <tr>
              <th scope="row">14</th>
              <td>Email  status</td>
              <td>String value. Limit 11 characters.</td>
            </tr>
            <tr>
              <th scope="row">15</th>
              <td>Mobile status</td>
              <td>String value. Limit 11 characters.</td>
            </tr>
            <tr>
              <th scope="row">16</th>
              <td>hash(Checksum)</td>
              <td>key|txnid|amount|customername|email|mobile|crypto|network|address|remark|kycstatus|emailstatus|mobilestatus|transactionstatus|SALT</td>
            </tr>

          </tbody>
        </table>
        <ul>
          <li class="text-info"><strong>Key</strong> – Y3fP9cxbthirdtdlGbOuNApartyQydkE0p</li>
          <li class="text-info"><strong>Salt</strong> – a8LgoKthIrDXu70VBEqkUMvFKeYCJ19XK6</li>
        </ul>
        <h6 class="mt-4 pb-4 fw-bold">Formula for checksum after transaction </h6>
        <p>$ text = "key|txnid|amount|customername|email|mobile|crypto|network|address|remarks|kycstatus|emailstatus|mobilestatus|transactionstatus|SALT";</p>
        <p>sha512($hashSequence1) </p>
        <p>It is strongly recommended that the hash (or checksum) is computed again after the transaction and is compared with what we post in the return parameters below.</p>
        <h6 class="mt-4 pb-4 fw-bold">Checksum Algorithm Example codes </h6>
        <p>For PHP</p>
        <p>Example code: $output = hash("sha512", $text);</p>
        <h5 class="text-success">Thank You!</h5>
      </div>
    </div>
  </div>
</main>
@endsection

@section('footer_scipts')

@endsection